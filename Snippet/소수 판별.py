
# 에라토스테네스의 체 : 범위에서 합성수(소수가 아닌 수)를 지우는 방식으로 소수를 찾는 방법.
# 1. 1은 제거
# 2. 지워지지 않은 수 중 제일 작은 2를 소수로 채택하고, 나머지 2의 배수를 모두 지운다.
# 3. 지워지지 않은 수 중 제일 작은 3을 소수로 채택하고, 나머지 3의 배수를 모두 지운다.
# 4. 지워지지 않은 수 중 제일 작은 5를 소수로 채택하고, 나머지 5의 배수를 모두 지운다.
# 5. (반복)

# 숫자 1부터 N 사이에 있는 소수의 개수를 반환하는 함수.
def solution(n):
    # 1은 소수가 아니므로, 2부터 N까지 set 자료형으로 모든 수를 나열한다.
    answer = set(range(2, n + 1))

    # 1은 소수가 아니므로, 2부터 N까지 순회
    for i in range(2, n + 1):
      # 남은 수 중에서 아직 제거되지 않은 가장 작은 수 i의 배수를 모두 제거한다.
      if i in answer:
        # i의 배수부터 N까지 i만큼 값을 증가하면서 소수가 아닌 수를 제거.
        answer -= set(range(i * 2, n + 1, i))
    
    # 남은 수는 모두 소수이므로, 소수의 개수 반환.
    return len(answer)


# 해당 수가 소수인지 아닌지 판별하는 함수.
def is_prime_number(n):
  if n != 1:
    # 2부터 n - 1까지 1씩 증가해 값을 비교.
    for i in range(2, n):
      # 만약 i로 나누어 떨어지면 소수가 아님.
      if n % i == 0:
        return False
  # n이 1이면 소수가 아님.
  else:
    return False
  # 소수인 경우.
  return True